// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PinPadScreen should match a DOM snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PinPadScreen
    currentPin={
      Array [
        1,
      ]
    }
    displayText={
      Array [
        1,
        "*",
        "*",
        "*",
      ]
    }
    numberAttempts={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="dot"
        >
          1
        </div>,
        <div
          className="dot"
        >
          *
        </div>,
        <div
          className="dot"
        >
          *
        </div>,
        <div
          className="dot"
        >
          *
        </div>,
      ],
      "className": "dots",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "host",
        "props": Object {
          "children": 1,
          "className": "dot",
        },
        "ref": null,
        "rendered": 1,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": "*",
          "className": "dot",
        },
        "ref": null,
        "rendered": "*",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "host",
        "props": Object {
          "children": "*",
          "className": "dot",
        },
        "ref": null,
        "rendered": "*",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "3",
        "nodeType": "host",
        "props": Object {
          "children": "*",
          "className": "dot",
        },
        "ref": null,
        "rendered": "*",
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="dot"
          >
            1
          </div>,
          <div
            className="dot"
          >
            *
          </div>,
          <div
            className="dot"
          >
            *
          </div>,
          <div
            className="dot"
          >
            *
          </div>,
        ],
        "className": "dots",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": 1,
            "className": "dot",
          },
          "ref": null,
          "rendered": 1,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": "*",
            "className": "dot",
          },
          "ref": null,
          "rendered": "*",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "host",
          "props": Object {
            "children": "*",
            "className": "dot",
          },
          "ref": null,
          "rendered": "*",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "host",
          "props": Object {
            "children": "*",
            "className": "dot",
          },
          "ref": null,
          "rendered": "*",
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
